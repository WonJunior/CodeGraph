const draggable = {
  events: {},
  startDrag: function(event) {
    this.element = event.target
    const rect = event.target.getBoundingClientRect();
    this.offset = [event.clientX - rect.x, event.clientY - rect.y];
  },
  dragging: function(e) {
    this.element.style.left = `${e.clientX - this.offset[0]}px`;
    this.element.style.top = `${e.clientY - this.offset[1]}px`;
  },
  endDrag: function() {
    document.removeEventListener('mousemove', this.events._mousemove)
    document.removeEventListener('mouseup', this.events._mouseup)
  },
  element: '',
  offset: []
};

document.addEventListener('mousedown', e => {

  (function() {
    this.events = {
      _mousemove: this.dragging.bind(this),
      _mouseup: this.endDrag.bind(this)
    }
  }.bind(draggable))()


  if (e.target.classList.contains('draggable')) {

    draggable.startDrag(e)

    document.addEventListener('mousemove', draggable.events._mousemove);

    document.addEventListener('mouseup', draggable.events._mouseup);

  }
});
